(CLASS, class, 1)
(IDENTIFIER, A, 1)
(ROUND_BRACKET_OPEN, (, 1)
(ROUND_BRACKET_CLOSE, ), 1)
(CURLY_BRACKET_OPEN, {, 1)
(ACCESS_MODIFIERS, public, 3)
(CONSTRUCTOR, constructor, 3)
(IDENTIFIER, A, 3)
(ROUND_BRACKET_OPEN, (, 3)
(DATA_TYPE, int, 3)
(IDENTIFIER, a, 3)
(SEPARATOR_OP, ,, 3)
(DATA_TYPE, int, 3)
(IDENTIFIER, b, 3)
(ROUND_BRACKET_CLOSE, ), 3)
(CURLY_BRACKET_OPEN, {, 3)
(DATA_TYPE, int, 5)
(IDENTIFIER, d, 5)
(AS_OP, =, 5)
(INTEGER_CONST, 5, 5)
(END_OF_STATEMENT, ;, 5)
(IF, if, 7)
(ROUND_BRACKET_OPEN, (, 7)
(INTEGER_CONST, 4, 7)
(RELATIONAL_OP, <, 7)
(INTEGER_CONST, 3, 7)
(ROUND_BRACKET_CLOSE, ), 7)
(CURLY_BRACKET_OPEN, {, 7)
(IF, if, 9)
(ROUND_BRACKET_OPEN, (, 9)
(INTEGER_CONST, 3, 9)
(RELATIONAL_OP, >, 9)
(INTEGER_CONST, 4, 9)
(ROUND_BRACKET_CLOSE, ), 9)
(CURLY_BRACKET_OPEN, {, 9)
(IDENTIFIER, d, 11)
(AS_OP, =, 11)
(INTEGER_CONST, 5, 11)
(END_OF_STATEMENT, ;, 11)
(CURLY_BRACKET_CLOSE, }, 12)
(ELIF, elif, 12)
(ROUND_BRACKET_OPEN, (, 12)
(INTEGER_CONST, 2, 12)
(RELATIONAL_OP, ==, 12)
(INTEGER_CONST, 4, 12)
(ROUND_BRACKET_CLOSE, ), 12)
(CURLY_BRACKET_OPEN, {, 12)
(IDENTIFIER, d, 14)
(AS_OP, =, 14)
(INTEGER_CONST, 4, 14)
(END_OF_STATEMENT, ;, 14)
(CURLY_BRACKET_CLOSE, }, 15)
(ELSE, else, 15)
(CURLY_BRACKET_OPEN, {, 15)
(IDENTIFIER, d, 17)
(AS_OP, =, 17)
(INTEGER_CONST, 3, 17)
(END_OF_STATEMENT, ;, 17)
(CURLY_BRACKET_CLOSE, }, 18)
(CURLY_BRACKET_CLOSE, }, 19)
(WHILE, while, 22)
(ROUND_BRACKET_OPEN, (, 22)
(IDENTIFIER, a, 22)
(RELATIONAL_OP, <, 22)
(IDENTIFIER, b, 22)
(ROUND_BRACKET_CLOSE, ), 22)
(CURLY_BRACKET_OPEN, {, 22)
(IDENTIFIER, a, 24)
(AS_OP, =, 24)
(INTEGER_CONST, 5, 24)
(END_OF_STATEMENT, ;, 24)
(CURLY_BRACKET_CLOSE, }, 25)
(CURLY_BRACKET_CLOSE, }, 27)
(CURLY_BRACKET_CLOSE, }, 29)
