(CLASS, class, 1)
(IDENTIFIER, A, 1)
(ROUND_BRACKET_OPEN, (, 1)
(ROUND_BRACKET_CLOSE, ), 1)
(CURLY_BRACKET_OPEN, {, 1)
(ACCESS_MODIFIERS, public, 2)
(DATA_TYPE, int, 2)
(IDENTIFIER, s, 2)
(END_OF_STATEMENT, ;, 2)
(ACCESS_MODIFIERS, public, 4)
(CONSTRUCTOR, constructor, 4)
(IDENTIFIER, A, 4)
(ROUND_BRACKET_OPEN, (, 4)
(DATA_TYPE, int, 4)
(IDENTIFIER, a, 4)
(SEPARATOR_OP, ,, 4)
(DATA_TYPE, int, 4)
(IDENTIFIER, b, 4)
(ROUND_BRACKET_CLOSE, ), 4)
(CURLY_BRACKET_OPEN, {, 4)
(DATA_TYPE, text, 6)
(IDENTIFIER, d, 6)
(AS_OP, =, 6)
(INTEGER_CONST, 5, 6)
(END_OF_STATEMENT, ;, 6)
(WHILE, while, 8)
(ROUND_BRACKET_OPEN, (, 8)
(UNI_BOOLEAN_OP, NOT, 8)
(ROUND_BRACKET_OPEN, (, 8)
(ROUND_BRACKET_OPEN, (, 8)
(IDENTIFIER, a, 8)
(PM, +, 8)
(INTEGER_CONST, 5, 8)
(ROUND_BRACKET_CLOSE, ), 8)
(RELATIONAL_OP, <, 8)
(INTEGER_CONST, 6, 8)
(ROUND_BRACKET_CLOSE, ), 8)
(ROUND_BRACKET_CLOSE, ), 8)
(CURLY_BRACKET_OPEN, {, 8)
(IF, if, 9)
(ROUND_BRACKET_OPEN, (, 9)
(IDENTIFIER, d, 9)
(RELATIONAL_OP, ==, 9)
(INTEGER_CONST, 5, 9)
(ROUND_BRACKET_CLOSE, ), 9)
(CURLY_BRACKET_OPEN, {, 10)
(DATA_TYPE, int, 11)
(IDENTIFIER, d, 11)
(END_OF_STATEMENT, ;, 11)
(WHILE, while, 12)
(ROUND_BRACKET_OPEN, (, 12)
(IDENTIFIER, a, 12)
(PM, +, 12)
(INTEGER_CONST, 8, 12)
(RELATIONAL_OP, <, 12)
(INTEGER_CONST, 3, 12)
(ROUND_BRACKET_CLOSE, ), 12)
(CURLY_BRACKET_OPEN, {, 13)
(IDENTIFIER, d, 14)
(AS_OP, =, 14)
(IDENTIFIER, s, 14)
(MDM, *, 14)
(IDENTIFIER, a, 14)
(PM, -, 14)
(INTEGER_CONST, 7, 14)
(END_OF_STATEMENT, ;, 14)
(CURLY_BRACKET_CLOSE, }, 15)
(CURLY_BRACKET_CLOSE, }, 16)
(CURLY_BRACKET_CLOSE, }, 18)
(IF, if, 20)
(ROUND_BRACKET_OPEN, (, 20)
(INTEGER_CONST, 4, 20)
(RELATIONAL_OP, <, 20)
(INTEGER_CONST, 3, 20)
(ROUND_BRACKET_CLOSE, ), 20)
(CURLY_BRACKET_OPEN, {, 20)
(IF, if, 22)
(ROUND_BRACKET_OPEN, (, 22)
(INTEGER_CONST, 3, 22)
(RELATIONAL_OP, >, 22)
(INTEGER_CONST, 4, 22)
(ROUND_BRACKET_CLOSE, ), 22)
(CURLY_BRACKET_OPEN, {, 22)
(IDENTIFIER, d, 24)
(AS_OP, =, 24)
(INTEGER_CONST, 5, 24)
(END_OF_STATEMENT, ;, 24)
(CURLY_BRACKET_CLOSE, }, 25)
(ELIF, elif, 25)
(ROUND_BRACKET_OPEN, (, 25)
(INTEGER_CONST, 2, 25)
(RELATIONAL_OP, ==, 25)
(INTEGER_CONST, 4, 25)
(ROUND_BRACKET_CLOSE, ), 25)
(CURLY_BRACKET_OPEN, {, 25)
(IDENTIFIER, d, 27)
(AS_OP, =, 27)
(INTEGER_CONST, 4, 27)
(END_OF_STATEMENT, ;, 27)
(CURLY_BRACKET_CLOSE, }, 28)
(ELSE, else, 28)
(CURLY_BRACKET_OPEN, {, 28)
(IDENTIFIER, d, 30)
(AS_OP, =, 30)
(INTEGER_CONST, 3, 30)
(END_OF_STATEMENT, ;, 30)
(CURLY_BRACKET_CLOSE, }, 31)
(CURLY_BRACKET_CLOSE, }, 32)
(FOR, for, 35)
(ROUND_BRACKET_OPEN, (, 35)
(DATA_TYPE, int, 35)
(IDENTIFIER, i, 35)
(AS_OP, =, 35)
(INTEGER_CONST, 0, 35)
(END_OF_STATEMENT, ;, 35)
(IDENTIFIER, i, 35)
(RELATIONAL_OP, <, 35)
(INTEGER_CONST, 5, 35)
(END_OF_STATEMENT, ;, 35)
(IDENTIFIER, i, 35)
(COMPOUND_AS_OP, +=, 35)
(INTEGER_CONST, 1, 35)
(ROUND_BRACKET_CLOSE, ), 35)
(CURLY_BRACKET_OPEN, {, 35)
(IDENTIFIER, a, 37)
(AS_OP, =, 37)
(INTEGER_CONST, 5, 37)
(END_OF_STATEMENT, ;, 37)
(CURLY_BRACKET_CLOSE, }, 38)
(CURLY_BRACKET_CLOSE, }, 40)
(ACCESS_MODIFIERS, public, 42)
(DATA_TYPE, int, 42)
(IDENTIFIER, drive, 42)
(ROUND_BRACKET_OPEN, (, 42)
(ROUND_BRACKET_CLOSE, ), 42)
(CURLY_BRACKET_OPEN, {, 42)
(DATA_TYPE, int, 44)
(IDENTIFIER, i, 44)
(SEPARATOR_OP, ,, 44)
(IDENTIFIER, j, 44)
(END_OF_STATEMENT, ;, 44)
(FOR, for, 46)
(ROUND_BRACKET_OPEN, (, 46)
(IDENTIFIER, i, 46)
(AS_OP, =, 46)
(INTEGER_CONST, 0, 46)
(END_OF_STATEMENT, ;, 46)
(IDENTIFIER, j, 46)
(RELATIONAL_OP, <, 46)
(INTEGER_CONST, 10, 46)
(END_OF_STATEMENT, ;, 46)
(IDENTIFIER, i, 46)
(COMPOUND_AS_OP, +=, 46)
(INTEGER_CONST, 1, 46)
(ROUND_BRACKET_CLOSE, ), 46)
(CURLY_BRACKET_OPEN, {, 46)
(IF, if, 48)
(ROUND_BRACKET_OPEN, (, 48)
(IDENTIFIER, i, 48)
(RELATIONAL_OP, <, 48)
(IDENTIFIER, j, 48)
(ROUND_BRACKET_CLOSE, ), 48)
(CURLY_BRACKET_OPEN, {, 48)
(IDENTIFIER, i, 50)
(COMPOUND_AS_OP, +=, 50)
(INTEGER_CONST, 1, 50)
(END_OF_STATEMENT, ;, 50)
(CURLY_BRACKET_CLOSE, }, 51)
(CURLY_BRACKET_CLOSE, }, 52)
(IDENTIFIER, drive, 53)
(ROUND_BRACKET_OPEN, (, 53)
(ROUND_BRACKET_CLOSE, ), 53)
(END_OF_STATEMENT, ;, 53)
(CURLY_BRACKET_CLOSE, }, 54)
(ACCESS_MODIFIERS, public, 56)
(DATA_TYPE, float, 56)
(IDENTIFIER, i, 56)
(AS_OP, =, 56)
(INTEGER_CONST, 0, 56)
(END_OF_STATEMENT, ;, 56)
(CURLY_BRACKET_CLOSE, }, 58)
(CLASS, class, 60)
(IDENTIFIER, B, 60)
(ROUND_BRACKET_OPEN, (, 60)
(IDENTIFIER, A, 60)
(ROUND_BRACKET_CLOSE, ), 60)
(CURLY_BRACKET_OPEN, {, 60)
(ACCESS_MODIFIERS, public, 61)
(IDENTIFIER, A, 61)
(IDENTIFIER, a, 61)
(END_OF_STATEMENT, ;, 61)
(ACCESS_MODIFIERS, public, 62)
(IDENTIFIER, A, 62)
(IDENTIFIER, fn, 62)
(ROUND_BRACKET_OPEN, (, 62)
(ROUND_BRACKET_CLOSE, ), 62)
(CURLY_BRACKET_OPEN, {, 62)
(CURLY_BRACKET_CLOSE, }, 62)
(CURLY_BRACKET_CLOSE, }, 64)
(CLASS, class, 66)
(IDENTIFIER, C, 66)
(ROUND_BRACKET_OPEN, (, 66)
(IDENTIFIER, B, 66)
(ROUND_BRACKET_CLOSE, ), 66)
(CURLY_BRACKET_OPEN, {, 66)
(ACCESS_MODIFIERS, public, 67)
(IDENTIFIER, B, 67)
(IDENTIFIER, b, 67)
(AS_OP, =, 67)
(IDENTIFIER, B, 67)
(ROUND_BRACKET_OPEN, (, 67)
(ROUND_BRACKET_CLOSE, ), 67)
(END_OF_STATEMENT, ;, 67)
(ACCESS_MODIFIERS, public, 69)
(DATA_TYPE, float, 69)
(IDENTIFIER, blue, 69)
(ROUND_BRACKET_OPEN, (, 69)
(DATA_TYPE, int, 69)
(IDENTIFIER, a, 69)
(SEPARATOR_OP, ,, 69)
(DATA_TYPE, int, 69)
(IDENTIFIER, x, 69)
(SEPARATOR_OP, ,, 69)
(DATA_TYPE, float, 69)
(IDENTIFIER, f, 69)
(ROUND_BRACKET_CLOSE, ), 69)
(CURLY_BRACKET_OPEN, {, 70)
(IDENTIFIER, B, 72)
(IDENTIFIER, b, 72)
(AS_OP, =, 72)
(IDENTIFIER, B, 72)
(ROUND_BRACKET_OPEN, (, 72)
(ROUND_BRACKET_CLOSE, ), 72)
(END_OF_STATEMENT, ;, 72)
(IDENTIFIER, b, 73)
(AS_OP, =, 73)
(INTEGER_CONST, 6, 73)
(END_OF_STATEMENT, ;, 73)
(CURLY_BRACKET_CLOSE, }, 74)
(CURLY_BRACKET_CLOSE, }, 75)
(CLASS, class, 77)
(IDENTIFIER, Main, 77)
(ROUND_BRACKET_OPEN, (, 77)
(ROUND_BRACKET_CLOSE, ), 77)
(CURLY_BRACKET_OPEN, {, 77)
(ACCESS_MODIFIERS, public, 79)
(CONSTRUCTOR, constructor, 79)
(IDENTIFIER, Main, 79)
(ROUND_BRACKET_OPEN, (, 79)
(ROUND_BRACKET_CLOSE, ), 79)
(CURLY_BRACKET_OPEN, {, 79)
(IDENTIFIER, C, 81)
(IDENTIFIER, c, 81)
(AS_OP, =, 81)
(IDENTIFIER, C, 81)
(ROUND_BRACKET_OPEN, (, 81)
(ROUND_BRACKET_CLOSE, ), 81)
(END_OF_STATEMENT, ;, 81)
(IDENTIFIER, c, 82)
(METHOD_OP, ., 82)
(IDENTIFIER, blue, 82)
(ROUND_BRACKET_OPEN, (, 82)
(INTEGER_CONST, 5, 82)
(SEPARATOR_OP, ,, 82)
(INTEGER_CONST, 6, 82)
(SEPARATOR_OP, ,, 82)
(FLOAT_CONST, 7.2, 82)
(ROUND_BRACKET_CLOSE, ), 82)
(END_OF_STATEMENT, ;, 82)
(IDENTIFIER, c, 83)
(METHOD_OP, ., 83)
(IDENTIFIER, drive, 83)
(ROUND_BRACKET_OPEN, (, 83)
(ROUND_BRACKET_CLOSE, ), 83)
(END_OF_STATEMENT, ;, 83)
(DATA_TYPE, int, 84)
(IDENTIFIER, a, 84)
(AS_OP, =, 84)
(IDENTIFIER, c, 84)
(METHOD_OP, ., 84)
(IDENTIFIER, b, 84)
(METHOD_OP, ., 84)
(IDENTIFIER, fn, 84)
(ROUND_BRACKET_OPEN, (, 84)
(ROUND_BRACKET_CLOSE, ), 84)
(METHOD_OP, ., 84)
(IDENTIFIER, s, 84)
(MDM, *, 84)
(INTEGER_CONST, 34, 84)
(PM, -, 84)
(INTEGER_CONST, 4, 84)
(MDM, /, 84)
(INTEGER_CONST, 2, 84)
(END_OF_STATEMENT, ;, 84)
(WHILE, while, 86)
(ROUND_BRACKET_OPEN, (, 86)
(INTEGER_CONST, 10, 86)
(RELATIONAL_OP, >, 86)
(IDENTIFIER, c, 86)
(METHOD_OP, ., 86)
(IDENTIFIER, b, 86)
(METHOD_OP, ., 86)
(IDENTIFIER, a, 86)
(METHOD_OP, ., 86)
(IDENTIFIER, drive, 86)
(ROUND_BRACKET_OPEN, (, 86)
(ROUND_BRACKET_CLOSE, ), 86)
(ROUND_BRACKET_CLOSE, ), 86)
(CURLY_BRACKET_OPEN, {, 86)
(CURLY_BRACKET_CLOSE, }, 88)
(CURLY_BRACKET_CLOSE, }, 93)
(CURLY_BRACKET_CLOSE, }, 97)
