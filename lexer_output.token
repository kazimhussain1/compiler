(CLASS, class, 1)
(IDENTIFIER, A, 1)
(ROUND_BRACKET_OPEN, (, 1)
(ROUND_BRACKET_CLOSE, ), 1)
(CURLY_BRACKET_OPEN, {, 1)
(ACCESS_MODIFIERS, public, 3)
(CONSTRUCTOR, constructor, 3)
(IDENTIFIER, A, 3)
(ROUND_BRACKET_OPEN, (, 3)
(DATA_TYPE, int, 3)
(IDENTIFIER, a, 3)
(SEPARATOR_OP, ,, 3)
(DATA_TYPE, int, 3)
(IDENTIFIER, b, 3)
(ROUND_BRACKET_CLOSE, ), 3)
(CURLY_BRACKET_OPEN, {, 3)
(DATA_TYPE, int, 5)
(IDENTIFIER, d, 5)
(AS_OP, =, 5)
(INTEGER_CONST, 5, 5)
(END_OF_STATEMENT, ;, 5)
(WHILE, while, 7)
(ROUND_BRACKET_OPEN, (, 7)
(UNI_BOOLEAN_OP, NOT, 7)
(ROUND_BRACKET_OPEN, (, 7)
(ROUND_BRACKET_OPEN, (, 7)
(IDENTIFIER, a, 7)
(PM, +, 7)
(INTEGER_CONST, 5, 7)
(ROUND_BRACKET_CLOSE, ), 7)
(RELATIONAL_OP, <, 7)
(INTEGER_CONST, 6, 7)
(ROUND_BRACKET_CLOSE, ), 7)
(ROUND_BRACKET_CLOSE, ), 7)
(CURLY_BRACKET_OPEN, {, 7)
(CURLY_BRACKET_CLOSE, }, 10)
(IF, if, 12)
(ROUND_BRACKET_OPEN, (, 12)
(INTEGER_CONST, 4, 12)
(RELATIONAL_OP, <, 12)
(INTEGER_CONST, 3, 12)
(ROUND_BRACKET_CLOSE, ), 12)
(CURLY_BRACKET_OPEN, {, 12)
(IF, if, 14)
(ROUND_BRACKET_OPEN, (, 14)
(INTEGER_CONST, 3, 14)
(RELATIONAL_OP, >, 14)
(INTEGER_CONST, 4, 14)
(ROUND_BRACKET_CLOSE, ), 14)
(CURLY_BRACKET_OPEN, {, 14)
(IDENTIFIER, d, 16)
(AS_OP, =, 16)
(INTEGER_CONST, 5, 16)
(END_OF_STATEMENT, ;, 16)
(CURLY_BRACKET_CLOSE, }, 17)
(ELIF, elif, 17)
(ROUND_BRACKET_OPEN, (, 17)
(INTEGER_CONST, 2, 17)
(RELATIONAL_OP, ==, 17)
(INTEGER_CONST, 4, 17)
(ROUND_BRACKET_CLOSE, ), 17)
(CURLY_BRACKET_OPEN, {, 17)
(IDENTIFIER, d, 19)
(AS_OP, =, 19)
(INTEGER_CONST, 4, 19)
(END_OF_STATEMENT, ;, 19)
(CURLY_BRACKET_CLOSE, }, 20)
(ELSE, else, 20)
(CURLY_BRACKET_OPEN, {, 20)
(IDENTIFIER, d, 22)
(AS_OP, =, 22)
(INTEGER_CONST, 3, 22)
(END_OF_STATEMENT, ;, 22)
(CURLY_BRACKET_CLOSE, }, 23)
(CURLY_BRACKET_CLOSE, }, 24)
(WHILE, while, 27)
(ROUND_BRACKET_OPEN, (, 27)
(IDENTIFIER, a, 27)
(RELATIONAL_OP, <, 27)
(INTEGER_CONST, 3, 27)
(ROUND_BRACKET_CLOSE, ), 27)
(CURLY_BRACKET_OPEN, {, 27)
(IDENTIFIER, a, 29)
(AS_OP, =, 29)
(INTEGER_CONST, 5, 29)
(END_OF_STATEMENT, ;, 29)
(CURLY_BRACKET_CLOSE, }, 30)
(CURLY_BRACKET_CLOSE, }, 32)
(ACCESS_MODIFIERS, public, 34)
(DATA_TYPE, int, 34)
(IDENTIFIER, drive, 34)
(ROUND_BRACKET_OPEN, (, 34)
(ROUND_BRACKET_CLOSE, ), 34)
(CURLY_BRACKET_OPEN, {, 34)
(DATA_TYPE, int, 36)
(IDENTIFIER, i, 36)
(SEPARATOR_OP, ,, 36)
(IDENTIFIER, j, 36)
(END_OF_STATEMENT, ;, 36)
(FOR, for, 38)
(ROUND_BRACKET_OPEN, (, 38)
(IDENTIFIER, i, 38)
(AS_OP, =, 38)
(INTEGER_CONST, 0, 38)
(END_OF_STATEMENT, ;, 38)
(IDENTIFIER, j, 38)
(RELATIONAL_OP, <, 38)
(INTEGER_CONST, 10, 38)
(END_OF_STATEMENT, ;, 38)
(IDENTIFIER, i, 38)
(COMPOUND_AS_OP, +=, 38)
(INTEGER_CONST, 1, 38)
(ROUND_BRACKET_CLOSE, ), 38)
(CURLY_BRACKET_OPEN, {, 38)
(IF, if, 40)
(ROUND_BRACKET_OPEN, (, 40)
(IDENTIFIER, i, 40)
(RELATIONAL_OP, <, 40)
(IDENTIFIER, j, 40)
(ROUND_BRACKET_CLOSE, ), 40)
(CURLY_BRACKET_OPEN, {, 40)
(IDENTIFIER, i, 42)
(COMPOUND_AS_OP, +=, 42)
(INTEGER_CONST, 1, 42)
(END_OF_STATEMENT, ;, 42)
(CURLY_BRACKET_CLOSE, }, 43)
(CURLY_BRACKET_CLOSE, }, 44)
(IDENTIFIER, drive, 45)
(ROUND_BRACKET_OPEN, (, 45)
(ROUND_BRACKET_CLOSE, ), 45)
(END_OF_STATEMENT, ;, 45)
(CURLY_BRACKET_CLOSE, }, 46)
(ACCESS_MODIFIERS, public, 48)
(DATA_TYPE, float, 48)
(IDENTIFIER, i, 48)
(AS_OP, =, 48)
(INTEGER_CONST, 0, 48)
(END_OF_STATEMENT, ;, 48)
(CURLY_BRACKET_CLOSE, }, 50)
(CLASS, class, 52)
(IDENTIFIER, B, 52)
(ROUND_BRACKET_OPEN, (, 52)
(IDENTIFIER, A, 52)
(ROUND_BRACKET_CLOSE, ), 52)
(CURLY_BRACKET_OPEN, {, 52)
(ACCESS_MODIFIERS, public, 53)
(IDENTIFIER, A, 53)
(IDENTIFIER, a, 53)
(END_OF_STATEMENT, ;, 53)
(CURLY_BRACKET_CLOSE, }, 56)
(CLASS, class, 58)
(IDENTIFIER, C, 58)
(ROUND_BRACKET_OPEN, (, 58)
(IDENTIFIER, B, 58)
(ROUND_BRACKET_CLOSE, ), 58)
(CURLY_BRACKET_OPEN, {, 58)
(ACCESS_MODIFIERS, public, 59)
(IDENTIFIER, B, 59)
(IDENTIFIER, b, 59)
(AS_OP, =, 59)
(IDENTIFIER, B, 59)
(ROUND_BRACKET_OPEN, (, 59)
(ROUND_BRACKET_CLOSE, ), 59)
(END_OF_STATEMENT, ;, 59)
(ACCESS_MODIFIERS, public, 61)
(DATA_TYPE, float, 61)
(IDENTIFIER, blue, 61)
(ROUND_BRACKET_OPEN, (, 61)
(DATA_TYPE, int, 61)
(IDENTIFIER, a, 61)
(SEPARATOR_OP, ,, 61)
(DATA_TYPE, int, 61)
(IDENTIFIER, b, 61)
(SEPARATOR_OP, ,, 61)
(DATA_TYPE, float, 61)
(IDENTIFIER, f, 61)
(ROUND_BRACKET_CLOSE, ), 61)
(CURLY_BRACKET_OPEN, {, 62)
(CURLY_BRACKET_CLOSE, }, 64)
(CURLY_BRACKET_CLOSE, }, 65)
(CLASS, class, 67)
(IDENTIFIER, Main, 67)
(ROUND_BRACKET_OPEN, (, 67)
(ROUND_BRACKET_CLOSE, ), 67)
(CURLY_BRACKET_OPEN, {, 67)
(ACCESS_MODIFIERS, public, 69)
(CONSTRUCTOR, constructor, 69)
(IDENTIFIER, Main, 69)
(ROUND_BRACKET_OPEN, (, 69)
(ROUND_BRACKET_CLOSE, ), 69)
(CURLY_BRACKET_OPEN, {, 69)
(IDENTIFIER, C, 71)
(IDENTIFIER, c, 71)
(AS_OP, =, 71)
(IDENTIFIER, C, 71)
(ROUND_BRACKET_OPEN, (, 71)
(ROUND_BRACKET_CLOSE, ), 71)
(END_OF_STATEMENT, ;, 71)
(IDENTIFIER, c, 72)
(METHOD_OP, ., 72)
(IDENTIFIER, blue, 72)
(ROUND_BRACKET_OPEN, (, 72)
(INTEGER_CONST, 5, 72)
(SEPARATOR_OP, ,, 72)
(INTEGER_CONST, 6, 72)
(SEPARATOR_OP, ,, 72)
(FLOAT_CONST, 7.2, 72)
(ROUND_BRACKET_CLOSE, ), 72)
(END_OF_STATEMENT, ;, 72)
(IDENTIFIER, c, 73)
(METHOD_OP, ., 73)
(IDENTIFIER, drive, 73)
(ROUND_BRACKET_OPEN, (, 73)
(ROUND_BRACKET_CLOSE, ), 73)
(END_OF_STATEMENT, ;, 73)
(WHILE, while, 76)
(ROUND_BRACKET_OPEN, (, 76)
(INTEGER_CONST, 10, 76)
(RELATIONAL_OP, >, 76)
(IDENTIFIER, c, 76)
(METHOD_OP, ., 76)
(IDENTIFIER, b, 76)
(METHOD_OP, ., 76)
(IDENTIFIER, a, 76)
(METHOD_OP, ., 76)
(IDENTIFIER, drive, 76)
(ROUND_BRACKET_OPEN, (, 76)
(ROUND_BRACKET_CLOSE, ), 76)
(ROUND_BRACKET_CLOSE, ), 76)
(CURLY_BRACKET_OPEN, {, 76)
(CURLY_BRACKET_CLOSE, }, 78)
(CURLY_BRACKET_CLOSE, }, 90)
(CURLY_BRACKET_CLOSE, }, 94)
